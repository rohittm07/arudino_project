#include <NewPing.h>

#define TRIGGER_PIN  12   // Trigger pin of the ultrasonic sensor
#define ECHO_PIN     11   // Echo pin of the ultrasonic sensor
#define MAX_DISTANCE 50   // Maximum distance (in cm) to check

// Output pins
const int redLedPin = 7;
const int greenLedPin = 2;
const int yellowLedPin = 4;
const int buzzPin = 10  ;

NewPing sonar(TRIGGER_PIN, ECHO_PIN, MAX_DISTANCE); // Initialize sensor

void setup() {
  pinMode(redLedPin, OUTPUT);
  pinMode(greenLedPin, OUTPUT);
  pinMode(yellowLedPin, OUTPUT);
  pinMode(buzzPin,OUTPUT);
  Serial.begin(9600);        
  Serial.println("Parking Sensor Active");
}

void loop() {
  int distance = sonar.ping_cm();  // Get distance in cm
  Serial.print("Distance: ");
  Serial.print(distance);
  Serial.println(" cm");

  parking(distance);  // Handle response
  delay(500);         // Add delay for stability
}

void parking(int distance) {
  if (distance == 0) {
    // No object or out of range
    digitalWrite(greenLedPin, LOW);
    digitalWrite(yellowLedPin, LOW);
    digitalWrite(redLedPin, LOW);
  }
  else if (distance > 15) {
    // Safe
    digitalWrite(greenLedPin, HIGH);
    digitalWrite(yellowLedPin, LOW);
    digitalWrite(redLedPin, LOW);
    digitalWrite(buzzPin, LOW);
  }
  else if (distance > 5 && distance <= 15) {
    // Caution
    digitalWrite(greenLedPin, LOW);
    digitalWrite(yellowLedPin, HIGH);
    digitalWrite(redLedPin, LOW);
    digitalWrite(buzzPin,HIGH);
    delay(1000);
    digitalWrite(buzzPin, LOW);
  }
  else if (distance <= 5) {
    // Danger â€“ object too close
    digitalWrite(greenLedPin, LOW);
    digitalWrite(yellowLedPin, LOW);
    digitalWrite(redLedPin, HIGH);
    delay(1000);
     digitalWrite(buzzPin, HIGH);
  }
}


